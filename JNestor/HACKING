

HACKING JNESTOR


Configuration of your java editor

The preferred IDE for developing with JNestor is Eclipse. I don't force to tie to a particular 
version of Eclipse, however, I am currently developing with Indigo. 

Under your project, properties -> java code style -> formatter you can import the file 
"jnestor editor options.xml" to properly configure your editor to work with Jnestor in a 
consistent manner.

The code style I am following in this project is quite different from the standard. Instead 
of following this style: 

public foo( String param1 ){
	System.out.printl( "bar" ); 
	if( true ){
		doThis();
	}
}

I am using this one: 

public foo( String param1 )
{
	System.out.printl( "bar" ); 
	if( true )
	{
		doThis();
	} // true
} // foo 

In other words: I prefer to put the opening curly brackets { in a line by themselves. Why?? 
Because I strongly believe that things in computing must have an starting and an ending, and 
those starting and endings must be clearly noticed. Putting the opening curly brackets at the 
ending of a line hides them and could lead to confussion. 

Tab spaces and indents

Tab spaces are 4 chars wide. 

I prefer to insert spaces instead of inserting tab characters. This allows the code files to 
be easier to print or read in other editors not properly configured (Notepad++, Geany, etc.).




