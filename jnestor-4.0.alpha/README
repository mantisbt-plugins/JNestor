

JNestor: another majordomo in java
----------------------------------

Please feel free to ask anything you might need to the mailing 
list: jnestor-general@lists.sourceforge.net. I am not very keen 
in writing documentation so I prefer to answer any questions in 
the list. 



Version 4.0.alpha
-----------------

Release: 2013-07-13

    - The project is now maintained with maven. 
    - I've made a major refactoring of some of the beans to 
    allow a better readability and maintanability. Instead 
    of having many classes that do transformations in the 
    email object (preloaders, loaders, mantisactionlisteners), 
    now there is only one: the mail object is passed to a list
    of MailProcessor beans. One of these processors is the 
    mantis processor, who creates an entry in mantis. Other
    is the archiver, who moves the original email to another 
    folder in the inbox. Another one is the resender, who 
    resends an email to another address, and so on. 
    - The application can now read from many folders at 
    the same time. 
    - The application now stays resident instead of doing the
    job and finishing. You can kill the application locally or 
    remotely issuing a "stop" command. 
    - Due to the previous, now there is no need to persist the 
    id of the read messages. Because it stays resident, it keeps
    track of the id's of the messages in the next reading cycle.

Future directions:

    - Review the resenders (the beans that resend the email back to 
    the mailbox). In the case of Outlook, the result is far from 
    perfect.
    - The archiver and resender beans are changing the subject 
    of the email depending if the issue existed in mantis or not:
    I think is a better idea to send the new subject to use for 
    them in case this is neccesary. This avoid this coupling between
    the mantis processor and the resenders.
    - Integrate with new mantis xml library.

Version 3.0
-----------

Release: 2012-05-19

	- The problem with the connection with Mantis is finnaly 
	solved using the stub classes for SOAP connection instead
	of the MantisConnect library. In the way to this change, 
	developed using strict mysql sentences where developed. 
	- The action resend is a troublemaker for Windows systems. 
	Various objects for resend have been developed in order to 
	allow the user to choose the one who works better
	- There are two classes developed in groovy that allows 
	customization of the application easyly. One of the 
	objects is called CustomMailPreprocessor and is executed 
	before the issue is added into mantis, and allow the user 
	to reject some mail messages based on the content, address, etc. 
	The other class is CustomizableAction and is an example 
	of custom action made in groovy. This customizable action 
	adds a custom field.

Version 1.2
-----------

Release: 2012-02-20

    - I detected a problem with the resend part of the custom 
    actions of mantis: it doesn't resend the file properly. 
    I've fixed allowing to resend in text/html format instead 
    of using pure text sending. 
    - Moreover, there were some problems with the configuration: 
    the texts were badly composed, and the final result in mantis 
    wasn't good: I think it was caused by the fact that those texts
    were copied from a properties file to a mantis file and they 
    weren't working well
    
    
Version 1.1
-----------

Release: 2012-02-07

    - I've suppressed the file jnestor-config.properties and
      integrate it into the config file of spring (applicationContext.xml)
      Now the configuration its done changing parts of this file.

Version 1.0
-----------

Release: 2012-02-04

    - Development of the core of the project
    - Development of the mantis mail processor (MailProcessorMantis) 
      and various actions: Archive -to archive messages-, 
      Deleter -to delete messages-, Resend -to resend some 
      messages to other accounts or forward the messages-

Future directions: 

    - Improve the mantis actions to detect if they are from a 
      new issue or a follow-up of an existing one (a new note):
      this could make the actions be more precise in their doings
